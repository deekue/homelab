#!/bin/bash

# shellcheck source=node_values.sh
source "$(dirname -- "$0")/node_values.sh"

all_safe=(
  cp
  dmesg
  ls
  service
  version
)

all_prompt=(
  apply
)

function custom_apply_all {
  readarray -t nodeIPs \
    < <(yq -r '.contexts.homelab.nodes[]' "$talosConfig")

  for nodeIP in "${nodeIPs[@]}" ; do
    custom_apply "$nodeIP" "$@"
  done
}

function custom_apply {
  local -r nodeIP="${1:?arg1 is nodeIP}"
  nodeId="${nodeIP##*.}"

  talosctl_cmd apply "$nodeIP" \
    -f "$nodeConfigDir/m900-$nodeId.yaml" "${@:2}"
}

function custom_cat {
  local -r nodeIP="${1:?arg1 is nodeIP}"
  local -r source="${2:?arg2 is source file}"

  talosctl_cmd cp "$nodeIP" "$source" - \
    | tar xzOf -
}

function custom_upgrade {
  local -r nodeIP="${1:?arg1 is nodeIP}"
  local -r version="${2:?arg2 is version}"
  nodeId="${nodeIP##*.}"

  talosctl_cmd upgrade "$nodeIP" -p \
    -i "ghcr.io/siderolabs/installer:$version" "${@:3}"
}

function talosctl_cmd {
  local -r cmd="${1:?arg1 is talosctl command}"
  local -r nodeIP="${2:?arg2 is nodeIP}"

  talosctl \
    -e "$nodeIP" \
    -n "$nodeIP" \
    "$cmd" "${@:3}"
}

function areYouSure {
  echo "Are you sure? " >&2
  while true ; do
    select choice in yes no ; do
      case "$choice" in
	yes)
	  return 0
	  ;;
	no)
	  return 1
	  ;;
      esac
    done
  done
}

function dispatch {
  local -r target="${1:?arg1 is target}"
  local -r cmd="${2:?arg2 is talosctl command}"

  if [[ "$target" == "all" ]] ; then
    # shellcheck disable=SC2076
    if [[ " ${all_safe[*]} " =~ " $cmd " ]] ; then
      nodes=(1 2 3)
    elif [[ " ${all_prompt[*]} " =~ " $cmd " ]] ; then
      if areYouSure ; then
	nodes=(1 2 3)
      else
	exit 0
      fi
    else
      # TODO maybe just ask "are you sure?" or use dry-run instead?
      echo "target 'all' not supported for $cmd" >&2
      exit 1
    fi
  else
    nodes=("$target")
  fi

  for node in "${nodes[@]}" ; do
    nodeIP="${network_default_subnet}.$node"
    if [[ "$(type -t "custom_$cmd")" == "function" ]] ; then
      "custom_$cmd" "$nodeIP" "${@:3}"
    else
      talosctl_cmd "$cmd" "$nodeIP" "${@:3}"
    fi
  done
}

function usage {
  cat <<EOF >&2
Usage: $(basename -- "$0") <target> <cmd> [arguments]

  target   1-3|all
  cmd      talosctl command or tc custom command
  
EOF

  exit 1
}

target="${1:?no target specified}" ; shift
cmd="${1:?no cmd specified}" ; shift

case "$target" in
  [1-3]|all)
    dispatch "$target" "$cmd" "$@"
    ;;
  *)
    usage
    ;;
esac
