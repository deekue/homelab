---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: rook-ceph

helmCharts:
  - name: rook-ceph-cluster
    releaseName: rook-ceph-cluster
    namespace: rook-ceph
    version: v1.9.8
    repo: https://charts.rook.io/release
    valuesInline:
      kubeVersion: "1.24"  # https://github.com/kubernetes-sigs/kustomize/pull/4666
      monitoring:
        enabled: true
        createPrometheusRules: true
      ingress:
        dashboard:
          host:
            name: rook.s.chaosengine.net
            path: /
          tls: {}
      configOverride: |
        [global]
        bdev_enable_discard = true
        bdev_async_discard = true
      cephClusterSpec:
        placement:
          all:
            tolerations:
              - key: "node-role.kubernetes.io/control-plane"
                operator: "Exists"
                effect: "NoSchedule"
              - key: "node-role.kubernetes.io/master"
                operator: "Exists"
                effect: "NoSchedule"
        network:
          provider: multus
          selectors:
            cluster: kube-system/storage-macvlan-whereabouts
        crashCollector:
          disable: false
        dashboard:
          enabled: true
          urlPrefix: /
          ssl: false
        storage:
          useAllNodes: false
          useAllDevices: false
          config:
            osdsPerDevice: "1"
          nodes:
            - name: m900-1
              devices:
                - name: "/dev/disk/by-id/nvme-KINGSTON_SEDC1000BM8240G_50026B7683CB7BFF"
            - name: m900-1
              devices:
                - name: "/dev/disk/by-id/nvme-KINGSTON_SEDC1000BM8240G_50026B7683E1C602"
            - name: m900-1
              devices:
                - name: "/dev/disk/by-id/nvme-KINGSTON_SEDC1000BM8240G_50026B7683E1C611"
      resources:
        mgr:
          limits:
            memory: "1Gi"
          requests:
            cpu: "250m"  # 500m
            memory: "256Mi"  # 512Mi
        mon:
          limits:
            memory: "2Gi"
          requests:
            cpu: "500m"  # 1000m
            memory: "500Gi"  # 1Gi
        osd:
          limits:
            memory: "4Gi"
          requests:
            cpu: "500m"  # 1000m
            memory: "2Gi"  # 4Gi
        prepareosd:
          limits:
            memory: "400Mi"
          requests:
            cpu: "250m"  # 500m
            memory: "25Mi"  # 50Mi
        mgr-sidecar:
          limits:
            memory: "100Mi"
          requests:
            cpu: "50m"  # 100m
            memory: "20Mi"  # 40Mi
        crashcollector:
          limits:
            memory: "60Mi"
          requests:
            cpu: "50m"  # 100m
            memory: "30Mi"  # 60Mi
        logcollector:
          limits:
            memory: "1Gi"
          requests:
            cpu: "50m"  # 100m
            memory: "50Mi"  # 100Mi
        cleanup:
          limits:
            memory: "1Gi"
          requests:
            cpu: "250m"  # 500m
            memory: "50Mi"  # 100Mi
    # cephBlockPoolsVolumeSnapshotClass:
    #   enabled: true
    #   name: csi-rbdplugin-snapclass
    #   annotations:
    #     velero.io/csi-volumesnapshot-class: "true"
      cephBlockPools:
        - name: ceph-blockpool
          spec:
            failureDomain: host
            replicated:
              size: 3
          storageClass:
            enabled: true
            name: ceph-block
            isDefault: true
            reclaimPolicy: Delete
            allowVolumeExpansion: true
            parameters:
              imageFormat: "2"
              imageFeatures: layering
              csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
              csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
              csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
              csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
              csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
              csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
              csi.storage.k8s.io/fstype: ext4
      cephFileSystems:
        - name: ceph-filesystem
          spec:
            metadataPool:
              replicated:
                size: 3
            dataPools:
              - failureDomain: host
                replicated:
                  size: 3
                name: data0
            metadataServer:
              activeCount: 1
              activeStandby: true
              resources:
                requests:
                  cpu: 1000m
                  memory: 4Gi
                limits:
                  memory: 4Gi
          storageClass:
            enabled: true
            isDefault: false
            name: ceph-filesystem
            pool: data0
            reclaimPolicy: Delete
            allowVolumeExpansion: true
            parameters:
              csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
              csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
              csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
              csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
              csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
              csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
              csi.storage.k8s.io/fstype: ext4
      cephObjectStores:
        - name: ceph-objectstore
          spec:
            metadataPool:
              failureDomain: host
              replicated:
                size: 3
            dataPool:
              failureDomain: host
              erasureCoded:
                dataChunks: 2
                codingChunks: 1
            preservePoolsOnDelete: true
            gateway:
              port: 80
              resources:
                requests:
                  cpu: 1000m
                  memory: 1Gi
                limits:
                  memory: 2Gi
              instances: 1
            healthCheck:
              bucket:
                interval: 60s
          storageClass:
            enabled: true
            name: ceph-bucket
            reclaimPolicy: Delete
            parameters:
              region: us-west-2

resources:
  - storage-macvlan-whereabouts.yaml
